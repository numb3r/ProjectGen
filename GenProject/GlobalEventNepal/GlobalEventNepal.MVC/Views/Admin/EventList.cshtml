@model GlobalEventNepal.Domain.Entities.Event


<div>
    <div class="editor-label label label-default">
        @Html.LabelFor(model => model.EventName)
    </div>
    <div>
        @Html.TextBoxFor(model => model.EventName, new { @class = "input-group input-group-lg col-lg-4", type = "text" })
        @if (ViewData.ModelState.IsValid)
        {
            @Html.ValidationMessageFor(model => model.EventName)
        }
    </div>
</div>
<div>
    <div class="editor-label label label-default">
        @Html.LabelFor(model => model.Category)
    </div>
    <div>
        @Html.TextBoxFor(model => model.Category, new { @class = "input-group input-group-lg col-lg-4", type = "text" })
        @if (ViewData.ModelState.IsValid)
        {
            @Html.ValidationMessageFor(model => model.Category)
        }
    </div>
</div>
<div>
    <div class="editor-label label label-default">
        @Html.LabelFor(model => model.Organization)
    </div>
    <div>
        @Html.TextBoxFor(model => model.Organization, new { @class = "input-group input-group-lg col-lg-4", type = "text" })
        @if (ViewData.ModelState.IsValid)
        {
            @Html.ValidationMessageFor(model => model.Organization)
        }
    </div>
</div>
<div>
    <div class="editor-label label label-default">
        @Html.LabelFor(model => model.Starts)
    </div>
    <div>
        @Html.TextBoxFor(model => model.Starts, new { @class = "input-group input-group-lg col-lg-4", type = "datetime-local" })
        @if (ViewData.ModelState.IsValid)
        {
            @Html.ValidationMessageFor(model => model.Starts)
        }
    </div>
</div>
<div>
    <div class="editor-label label label-default">
        @Html.LabelFor(model => model.Ends)
    </div>
    <div>
        @Html.TextBoxFor(model => model.Ends, new { @class = "input-group input-group-lg col-lg-4", type = "datetime-local" })
        @if (ViewData.ModelState.IsValid)
        {
            @Html.ValidationMessageFor(model => model.Ends)
        }
    </div>
</div>
<div>
    <div class="editor-label label label-default">
        @Html.LabelFor(model => model.Location)
    </div>
    <div>
        @Html.TextBoxFor(model => model.Location, new { @class = "input-group input-group-lg col-lg-4", type = "text" })
        @if (ViewData.ModelState.IsValid)
        {
            @Html.ValidationMessageFor(model => model.Location)
        }
    </div>
</div>
<div>
    <div class="editor-label label label-default">
        @Html.LabelFor(model => model.Description)
    </div>
    <div>
        @Html.TextBoxFor(model => model.Description, new { @class = "input-group input-group-lg col-lg-4", type = "text" })
        @if (ViewData.ModelState.IsValid)
        {
            @Html.ValidationMessageFor(model => model.Description)
        }
    </div>
</div>
<div>
    <div class="editor-label label label-default">
        @Html.LabelFor(model => model.Price)
    </div>
    <div>
        @Html.TextBoxFor(model => model.Price, new { @class = "input-group input-group-lg col-lg-4", type = "text" })
        @if (ViewData.ModelState.IsValid)
        {
            @Html.ValidationMessageFor(model => model.Price)
        }
    </div>
</div>